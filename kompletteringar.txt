Vi har "hög komplexitet" på några funktioner. Detta kan lösas genom att bryta ut olika delar till hjälpfunktioner,
vilket vi försökte göra. Problemet var att programmet slutade fungera då och vi lyckades itne lösa det med hjälpfunktioner
hur mycket vi än försökte. Vi får hoppas att detta är okej ändå.

- PieceMove dåligt namn. (inte en sorts förflyttning)
    Ändrade namn till PieceMover.

 - "fatal errors" i showstopper-listan angående
    Tog bort picturepath-fältet från PiecePainter
    Tog bort den oanvända importen i PiecePainter.
    Ändrade så att Frame istället är en listener till board. På det sättet kunde vi ändra panel från att "tvingas"
    vara i ett static context.

 - Lägg in updatePreviousLegalMoves() i piece då 5/6 pieces använder den
	Vi tog bort detta helt då det inte längre används.

 - gå igenom varningarna igen och kommentera varför vi inte fixar det vi lämnar kvar
 	Fixat vissa, kommenterat på majoriteten. Anledningen till varför vi inte kommenterat alla kommer nedan.
 	Vi hade ganska många "MaybeTypeCheck"-errormeddelanden. Vi anser att vår kod inte använder dessa
 	typcheckar som i exemplena på kurshemsidan (#typkontroll), där man använder en specifik typ av egenskap beroende på
 	vilken typ det är. Därför har vi inte "löst" de problemen som är kvar.
 	En del kommentarer refererar till liknande delar av andra metoder också.

 - ta bort kod som inte används eller som är utkommenterad
 	All oanvänd kod har tagits bort.

 - magiska konstanter
 	Skrivit namn på konstanter som används istället för att ha olika random numbers. Detta är gjort
 	över i stort sett hela koden så svårt att skriva ner exakt alla här. Bytt ut t.ex switchar till
 	att förklara vad det är som ändras..

 - bugg: schack funkar ej
 	Det funkar nu, tillsammans med schack-matt. Vi gjorde lite ändringar i isChecked och isInterrupted (board).
 	Detta följt av isCheckMate (board) gör att det nu funkar som det ska.

 - ingen error-handling tex när en bild inte kan laddas. programmet bör stängas av och/eller ge felmeddelande.
	Error handling är inlagt i bufferedImageMaker(). Ett errormeddelande skickas om bilden inte kan läsas in av någon anledning.

 - Lägg in så att gameFrame är en boardlistener för att den ska uppdatera labels i panelen.
 	Denna funktion hette Frame förut, vi bytte namn då den inte skulle vara för lik javas egna JFrame.
 	Detta ska lösa problemet vi har med att Panel för tillfället "måste" vara static.
 	Den implementerar nu BoardListener.


 - fälten i Panel behöver inte vara static
	(Hör till ovan och är gjord).

 - kombinera gärna setPlayer1 -> setPlayerName(index, name).
   Vi ansåg inte att detta var supernödvändigt, så de heter fortfarande samma som innan.

 - vi kan använda "Java Point" istället för vår egna Position-klass
    Vi anser att detta tar för lång tid att implementera då en väldigt stor del av vårt program bygger på Position-klassen
    (för att lagra pjäsers positioner). Det fungerar bra även om det som sagt kanske inte är optimalt.

 - "Board: Panel.getjLabel().setText(Panel.getPlayer2()); It is better to have a method: setTurn(white|black) and deal with the
    label inside the Panel class. This will also make that the label."
    Ändrade till setTurn (metod i Panel) och hanterar nu label inuti Panel-klassen. Vi tog nu också bort getters för player1
    och player2 då de inte längre används.

 - If I just click anywhere on the board and not an a piece I get null pointer exception.
    Fixat, lade till en check som såg till att dragPiece inte var null när man skulle utföra ex. Piece.getY() (vilket
    då gav nullpointer-error). Nu gör den endast sådana checkar när man "håller i" en pjäs.